#### TYPES OF LOGGERS ####
#### NOTE ABOUT ADDITIVITY: You can create sub-appenders using a dot but ".logsetup" must be added in the end E.G: UAAL.MW should be UAAL.MW.logsetup


# CONSOLE: Shows logs on the CONSOLE 
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%d{HH:mm:ss.SSS} - %-5p - [%t]  %c - %m%n

# SIFT: Used by Karaf for its own purposes
log4j.appender.sift=org.apache.log4j.sift.MDCSiftingAppender
log4j.appender.sift.key=bundle.name
log4j.appender.sift.default=karaf
log4j.appender.sift.appender=org.apache.log4j.FileAppender
log4j.appender.sift.appender.layout=org.apache.log4j.PatternLayout
log4j.appender.sift.appender.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %m%n
log4j.appender.sift.appender.file=${karaf.data}/log/$\\{bundle.name\\}.log
log4j.appender.sift.appender.append=true

# KARAF: Stores logs into file "karaf.log"
log4j.appender.KARAF=org.apache.log4j.RollingFileAppender
log4j.appender.KARAF.layout=org.apache.log4j.PatternLayout
log4j.appender.KARAF.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.KARAF.file=${karaf.data}/log/karaf.log
log4j.appender.KARAF.append=true
log4j.appender.KARAF.maxFileSize=10MB
log4j.appender.KARAF.maxBackupIndex=100

# SLP: Stores logs into file "slp.log"
log4j.appender.SLP=org.apache.log4j.RollingFileAppender
log4j.appender.SLP.layout=org.apache.log4j.PatternLayout
log4j.appender.SLP.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-16.16t | %-16.16c{1} | %m%n
log4j.appender.SLP.file=${karaf.data}/log/slp.log
log4j.appender.SLP.append=true
log4j.appender.SLP.maxFileSize=10MB
log4j.appender.SLP.maxBackupIndex=100

# JGROUPS: Stores logs into file "jGroups.log"
log4j.appender.JGROUPS=org.apache.log4j.RollingFileAppender
log4j.appender.JGROUPS.layout=org.apache.log4j.PatternLayout
log4j.appender.JGROUPS.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-16.16t | %-16.16c{1} | %m%n
log4j.appender.JGROUPS.file=${karaf.data}/log/jGroups.log
log4j.appender.JGROUPS.append=true
log4j.appender.JGROUPS.maxFileSize=10MB
log4j.appender.JGROUPS.maxBackupIndex=100

# UAAL: Stores logs into file "uAAL.log"
log4j.appender.UAAL=org.apache.log4j.RollingFileAppender
log4j.appender.UAAL.layout=org.apache.log4j.PatternLayout
log4j.appender.UAAL.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.UAAL.file=${karaf.data}/log/uAAL.log
log4j.appender.UAAL.append=true
log4j.appender.UAAL.maxFileSize=10MB
log4j.appender.UAAL.maxBackupIndex=100

# UAAL.MW.logsetup: Stores logs into file "uAAL-MW.log"
log4j.appender.UAAL.MW.logsetup=org.apache.log4j.RollingFileAppender
log4j.appender.UAAL.MW.logsetup.layout=org.apache.log4j.PatternLayout
log4j.appender.UAAL.MW.logsetup.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.UAAL.MW.logsetup.file=${karaf.data}/log/uAAL-MW.log
log4j.appender.UAAL.MW.logsetup.append=true
log4j.appender.UAAL.MW.logsetup.maxFileSize=10MB
log4j.appender.UAAL.MW.logsetup.maxBackupIndex=100

# UAAL.SERV.logsetup: Stores logs into file "uAAL-SERV.log"
log4j.appender.UAAL.SERV.logsetup=org.apache.log4j.RollingFileAppender
log4j.appender.UAAL.SERV.logsetup.layout=org.apache.log4j.PatternLayout
log4j.appender.UAAL.SERV.logsetup.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.UAAL.SERV.logsetup.file=${karaf.data}/log/uAAL-SERV.log
log4j.appender.UAAL.SERV.logsetup.append=true
log4j.appender.UAAL.SERV.logsetup.maxFileSize=10MB
log4j.appender.UAAL.SERV.logsetup.maxBackupIndex=100

# UAAL.CTXT.logsetup: Stores logs into file "uAAL-CTXT.log"
log4j.appender.UAAL.CTXT.logsetup=org.apache.log4j.RollingFileAppender
log4j.appender.UAAL.CTXT.logsetup.layout=org.apache.log4j.PatternLayout
log4j.appender.UAAL.CTXT.logsetup.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.UAAL.CTXT.logsetup.file=${karaf.data}/log/uAAL-CTXT.log
log4j.appender.UAAL.CTXT.logsetup.append=true
log4j.appender.UAAL.CTXT.logsetup.maxFileSize=10MB
log4j.appender.UAAL.CTXT.logsetup.maxBackupIndex=100

# APP: Stores logs into file "app.log"
log4j.appender.APP=org.apache.log4j.RollingFileAppender
log4j.appender.APP.layout=org.apache.log4j.PatternLayout
log4j.appender.APP.layout.ConversionPattern =  %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.APP.file=${karaf.data}/log/app.log
log4j.appender.APP.append=true
log4j.appender.APP.maxFileSize=10MB
log4j.appender.APP.maxBackupIndex=100

# REMOTE: Stores logs in a remote server
log4j.appender.REMOTE=org.apache.log4j.net.SocketAppender
log4j.appender.REMOTE.Port=4712
log4j.appender.REMOTE.RemoteHost=localhost
log4j.appender.REMOTE.ReconnectionDelay=10000


#### ASSIGNATION OF LOGGERS ####
#### NOTE ABOUT ADDITIVITY: if a pckg is set to XXX.YYY.logsetup, it is also set to XXX. E.G: Setting UAAL.MW.logsetup also sets UAAL

# Root logger: Everything will inherit this
log4j.rootLogger = ERROR, KARAF, osgi:*
log4j.throwableRenderer=org.apache.log4j.OsgiThrowableRenderer

# To avoid flooding the log when using DEBUG level on an ssh connection and doing log:tail
log4j.logger.org.apache.sshd.server.channel.ChannelSession = ERROR

# ch.ethz.iks.slp.* : jSLP library 
log4j.logger.ch.ethz.iks.slp = ERROR, SLP

# org.jgroups.* : jGroups library
log4j.logger.org.jgroups = ERROR, JGROUPS

# org.universAAL.* : all universAAL packages
log4j.logger.org.universAAL = DEBUG, UAAL

# org.universAAL.middleware.* : universAAL middleware
log4j.logger.org.universAAL.mw = ERROR, UAAL.MW.logsetup

# org.universAAL.middleware.* : universAAL service bus
log4j.logger.org.universAAL.mw.bus.service = ERROR, UAAL.SERV.logsetup

# org.universAAL.middleware.* : universAAL context bus
log4j.logger.org.universAAL.mw.bus.context = ERROR, UAAL.CTXT.logsetup

# your application(s) package(s) here. (if your app uses uAAL's LogUtils then it is not the package but the artifact ID)
log4j.logger.org.universAAL.ri.gateway.multitenant = ERROR, APP, CONSOLE
